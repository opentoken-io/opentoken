{
    "accessCode": {
        "codeHash": {
            "algorithm": "sha512",
            "derivedLength": 32,
            "encoding": "base64-uri",
            "iterations": 1500,
            "type": "pbkdf2"
        },
        "codeLength": 32,
        "lifetime": {
            "months": 6
        },
        "secretLength": 32,
        "storagePrefix": "access-code/"
    },
    "account": {
        "idHash": {
            "algorithm": "sha512",
            "derivedLength": 32,
            "encoding": "base64-uri",
            "iterations": 5000,
            "type": "pbkdf2"
        },
        "idLength": 32,
        "lifetime": {
            "months": 6
        },
        "loginCookie": {
            "name": "login",
            "settings": {
                "httpOnly": true,
                "maxAge": 600,
                "path": "/account/",
                "secure": false
            }
        },
        "passwordHash": {
            "algorithm": "sha512",
            "derivedLength": 48,
            "encoding": "base64",
            "iterations": 100000,
            "type": "pbkdf2"
        },
        "passwordSaltLength": 128,
        "storagePrefix": "account/"
    },
    "challenge": {
        "challengeHash": {
            "algorithm": "sha512",
            "encoding": "hex"
        },
        "idHash": {
            "algorithm": "sha512",
            "derivedLength": 32,
            "encoding": "base64-uri",
            "iterations": 5000,
            "salt": "Something to make this different than the account hash.",
            "type": "pbkdf2"
        },
        "idLength": 128,
        "lifetime": {
            "minutes": 10
        },
        "storagePrefix": "challenge/"
    },
    "debug": false,
    "encryption": {
        "primary": {
            "cipher": {
                "algorithm": "aes-256-cbc",
                "digest": "sha512",
                "iterations": 10000
            },
            "hmac": {
                "algorithm": "sha512",
                "digest": "sha512",
                "iterations": 10000
            }
        },
        "secondary": {
            "cipher": {
                "algorithm": "bf-cbc",
                "digest": "whirlpool",
                "iterations": 10000
            },
            "hmac": {
                "algorithm": "whirlpool",
                "digest": "whirlpool",
                "iterations": 10000
            }
        }
    },
    "mfa": {
        "totp": {
            "keyLength": 128,
            "name": "OpenToken.io"
        }
    },
    "record": {
        "lifetimeMaximum": {
            "months": 6
        },
        "encryptionKeyFile": "encryption.key"
    },
    "registration": {
        "confirmationCodeLength": 32,
        "idHash": {
            "algorithm": "sha512",
            "derivedLength": 48,
            "encoding": "base64-uri",
            "iterations": 100000,
            "type": "pbkdf2"
        },
        "idLength": 32,
        "lifetime": {
            "hours": 1
        },
        "storagePrefix": "registration/"
    },
    "schemaPath": "./schema",
    "session": {
        "idHash": {
            "algorithm": "sha512",
            "derivedLength": 48,
            "encoding": "base64-uri",
            "iterations": 5000,
            "type": "pbkdf2"
        },
        "idLength": 32,
        "lifetime": {
            "minutes": 15
        },
        "storagePrefix": "session/"
    },
    "server": {
        "baseUrl": "https://localhost:8080",
        "exceptionIdLength": 12,
        "name": "OpenToken.io",
        "port": 8443,
        "profileMiddleware": false,
        "proxyProtocol": false
    },
    "signature": {
        "dateWindowFuture": {
            "minutes": 1
        },
        "dateWindowPast": {
            "minutes": 5
        },
        "host": "opentoken.io",
        "method": "OT1-HMAC-SHA256-HEX",
        "relatedLink": "insert-url-here-for-related-link"
    },
    "storage": {
        "engine": "s3",
        "s3": {
            "bucket": "opentoken-io-test-s3",
            "region": "us-east-1"
        }
    }
}
